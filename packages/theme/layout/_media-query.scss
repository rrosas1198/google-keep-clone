/* stylelint-disable function-no-unknown */
/* stylelint-disable at-rule-no-unknown */
@use "sass:list";
@use "sass:map";
@use "../system/breakpoints";

@mixin breakpoint-up($name) {
    $min: _breakpoint-min($name);
    @if $min and $min != 0 {
        @media (min-width: $min) {
            @content;
        }
    } @else {
        @content;
    }
}

@mixin breakpoint-down($name) {
    $max: _breakpoint-max($name);
    @if $max and $max != 0 {
        @media (max-width: $max) {
            @content;
        }
    } @else {
        @content;
    }
}

@mixin breakpoint-between($lower, $upper) {
    $min: _breakpoint-min($lower);
    $max: _breakpoint-max($upper);

    @if ($min != null and $max != null) {
        @media (min-width: $min) and (max-width: $max) {
            @content;
        }
    } @else if ($max == null) {
        @include breakpoint-up($lower) {
            @content;
        }
    } @else if ($min == null) {
        @include breakpoint-down($upper) {
            @content;
        }
    }
}

@mixin breakpoint-only($name) {
    $min: _breakpoint-min($name);
    $next: _breakpoint-next($name);
    $max: _breakpoint-max($next);

    @if $min != null and $max != null {
        @media (min-width: $min) and (max-width: $max) {
            @content;
        }
    } @else if $max == null {
        @include breakpoint-up($name, $breakpoints) {
            @content;
        }
    } @else if $min == null {
        @include breakpoint-down($next, $breakpoints) {
            @content;
        }
    }
}

@function _breakpoint-next($name) {
    $keys: breakpoints.get-keys();
    $index: list.index($keys, $name);
    @return if($index < list.length($keys), list.nth($keys, $index + 1), null);
}

@function _breakpoint-min($name) {
    $min: breakpoints.get-value($name, width);
    @return if($min != 0, $min, null);
}

@function _breakpoint-max($name) {
    $next: _breakpoint-next($name);
    @return if($next, _breakpoint-min($next) - 0.02, null);
}
